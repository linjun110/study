<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		<headers>
			<cache-control />
		</headers>

		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/rest/**" access="permitAll" />

		<form-login login-page="/login"
		    default-target-url="/index"
			authentication-failure-url="/login?error"
			username-parameter="username"
			password-parameter="password"
			login-processing-url="/auth/login_check" />
		<!-- Alternative solution of form-login is:
		<http-basic />
		<openid-login />
		-->

		<logout logout-success-url="/login?logout" delete-cookies="JSESSIONID" />
		<csrf request-matcher-ref="csrfSecurityRequestMatcher"/>

		<!-- 出现奇怪的行为: <session-management invalid-session-url="/invalidSession" /> -->
		<session-management session-fixation-protection="migrateSession">
		</session-management>
	</http>

	<beans:bean id="csrfSecurityRequestMatcher" class="com.linjun.java.springMvcWeb.webServer.utils.CsrfSecurityRequestMatcher">
		<beans:property name="execludeUrls">
			<beans:list>
				<beans:value>/rest/</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>


	<!-- TODO: 似乎没用, 尚未找到原因
	1. You should only declare one global-method-security
	<global-method-security secured-annotations="enabled" jsr250-annotations="enabled" pre-post-annotations="enabled">
        <protect-pointcut expression="execution(* com.linjun.java.springMvcWeb.webServer.helpers.RabbitmqHelper.*(..))"
					  access="ROLE_USER"/>
	</global-method-security>
	-->

	<!-- Select users and user_roles from database -->
	<authentication-manager>
	    
		<authentication-provider>
		    <password-encoder ref="encoder" /> <!-- 注意 encoder 在下面指定, 该 encoder 用来给password加密 -->
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select name as username, password, enabled from employee where name=?"
				authorities-by-username-query="select name as username, role from employee where name=?" />
		</authentication-provider>
		
	</authentication-manager>
 
	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10" />
	</beans:bean>
	
</beans:beans>